#!/usr/bin/env ruby

require 'hitting_rock_bottom'

def usage
  usage = <<EOS
international_trade - A currency conversion puzzle

SEE-ALSO
  http://www.puzzlenode.com/puzzles/11-hitting-rock-bottom

USAGE
  hitting_rock_bottom <cave_file> <out_file>

INPUTS
  cave_file - the file that describes the cave and the number of water units
  out_file  - where the results will go.

  ALL INPUTS are required.

  The out_file will contain one line, with the water depths in each column, separated by spaces
EOS
  puts usage
end

def die
  puts usage
  exit 1
end

begin
  die if ARGV.length != 2

  cave_file, out_file = ARGV


  lines = File.readlines(cave_file).map(&:chomp)

  #first line is the water units
  water_units = lines.shift.to_f

  # skip blank line
  lines.shift

  cave = HittingRockBottom::Cave.new(lines)

  puts water_units
  puts cave.to_s

  # converter = InternationalTrade::CurrencyConverter.new
  # converter.import_conversions(rates_file)
  #
  # transactions_data = File.readlines(transaction_file).map(&:chomp).map{ |row| row.split(',')}
  # fields = transactions_data.shift # remove the title row
  #
  # transactions = transactions_data.map { |transaction|OpenStruct.new(fields.zip(transaction).to_h) }
  # sku_transactions = transactions.select{ |transaction| transaction.sku == sku }
  #
  # target_values = sku_transactions.map { |transaction| converter.convert(transaction.amount, target_currency)}
  # total = target_values.inject(&:+)
  #
  # File.open(out_file, 'w') do |file|
  #   file.puts(total.to_f)
  # end

rescue StandardError => e
  puts e.message
  puts e.backtrace
end
